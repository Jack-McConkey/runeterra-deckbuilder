import type {NextPage} from "next";
import Head from "next/head";
import Header from "../Components/UI/Header/Header";
import DeckBuilder from "../Components/DeckBuilder/DeckBuilder";
import {prisma} from "../db/client";
import {RuneterraCard} from "../Components/DeckBuilder/types";
import {CardContext} from "../Components/Contexts/CardContext";
import RiotDisclosure from "../Components/RiotDisclosure/RiotDisclosure";

export async function getStaticProps() {
    const res = await prisma.cards.findMany();

    const data = res.reduce<RuneterraCard[]>((newCards, {card}: any) => {
        newCards.push(card);
        return newCards;
    }, []);

    const cards = data
        .sort(({cost: a}, {cost: b}) => a - b)
        .sort(({rarity: a}, {rarity: b}) => {
            if (a === b) return 0;
            if (a === "Champion") return -1;
            return 0;
        })
        .reduce<{[key: string]: RuneterraCard}>((obj, card) => {
            obj[card.cardCode] = card;
            return obj;
        }, {});

    return {
        props: {cards: cards},
    };
}

const Home: NextPage<{cards: {[key: string]: RuneterraCard}}> = ({cards}) => {
    return (
        <div>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header />
            <CardContext.Provider value={cards}>
                <DeckBuilder />
            </CardContext.Provider>
            <footer>
                <RiotDisclosure />
            </footer>
        </div>
    );
};

export default Home;
